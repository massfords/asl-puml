@startuml
hide empty description
skinparam ArrowColor #black
skinparam state {

    BackgroundColor<<Choice>> #whitesmoke
    FontColor<<Choice>> automatic

    BackgroundColor<<aslParallel>> #whitesmoke

    BackgroundColor<<aslPass>> #whitesmoke
    FontColor<<aslPass>> automatic

    BackgroundColor<<aslSucceed>> #green
    FontColor<<aslSucceed>> automatic

    BackgroundColor<<aslTask>> #lightblue
    FontColor<<aslTask>> automatic

    BackgroundColor<<aslWait>> #whitesmoke
    FontColor<<aslWait>> automatic
    BackgroundColor<<Compensate>> #orange
}
state "Get Lock" as state1<<aslParallel>> {
state "Acquire Lock" as state5<<aslTask>>
state "Initialize Lock Item" as state6<<aslTask>>
state "Get Current Lock Record" as state7<<aslTask>>
state "Check If Lock Already Acquired" as state8<<Choice>>
state "Continue Because Lock Was Already Acquired" as state9<<aslPass>>
state "Wait to Get Lock" as state10<<aslWait>>
}
state "Do Work" as state2<<aslParallel>> {
state "Here" as state11<<aslPass>>
state "You" as state12<<aslPass>>
state "Do" as state13<<aslPass>>
state "Work" as state14<<aslPass>>
state "Run Lambda Function With Controlled Concurrency" as state15<<aslTask>>
}
state "Release Lock" as state3<<aslTask>>
state "Success State" as state4<<aslSucceed>>
[*] --> state1
state1 --> state2
state2 --> state3
state3 --> state4
state3 -[bold,#orange]-> state4
state4 --> [*]
state5 -[bold,#orange]-> state6
state5 -[bold,#orange]-> state7
state6 --> state5
state6 -[bold,#orange]-> state5
state7 --> state8
state8 --> state9
state8 --> state10
state10 --> state5
state11 --> state12
state12 --> state13
state13 --> state14
state14 --> state15
@enduml
